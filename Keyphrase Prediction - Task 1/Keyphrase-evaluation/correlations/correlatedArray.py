import numpy as np

# Example usage
X = np.array([0.9099481105804443, 0.8615877032279968, 0.8533230423927307, 0.7543553709983826, 0.8079788684844971, 0.8259698748588562, 0.8279163241386414, 0.826944887638092, 0.8214789032936096, 0.8403319716453552, 0.8945502042770386, 0.8284065127372742, 0.8751159310340881, 0.8419440388679504, 0.8404826521873474, 0.8609053492546082, 0.8350071310997009, 0.8134725689888, 0.8180870413780212, 0.8620337843894958, 0.858101487159729, 0.9389625787734985, 0.8684535622596741, 0.9201785922050476, 0.8228598237037659, 0.8198614120483398, 0.8301876783370972, 0.83022141456604, 0.8624377250671387, 0.8777328729629517, 0.8517711162567139, 0.8404831290245056, 0.8520376086235046, 0.8038566708564758, 0.79118812084198, 0.8720659613609314, 0.7888525724411011, 0.8472350239753723, 0.8164598345756531, 0.9090136289596558, 0.8218907713890076, 0.8141175508499146, 0.851035475730896, 0.8004535436630249, 0.7714231610298157, 0.8384749889373779, 0.8589208126068115, 0.8417051434516907, 0.7906938195228577, 0.8531825542449951, 0.8434319496154785, 0.7700338959693909, 0.8300918340682983, 0.8428817391395569, 0.8166245222091675, 0.8176181316375732, 0.838662326335907, 0.7474668622016907, 0.7656267285346985, 0.9008825421333313, 0.8627980947494507, 0.7948209047317505, 0.8222130537033081, 0.8523434996604919, 0.8104269504547119, 0.8436726927757263, 0.8665958642959595, 0.8131474852561951, 0.8530248403549194, 0.7659143209457397, 0.8277636766433716, 0.8214789032936096, 0.8667261600494385, 0.836601197719574, 0.8105332255363464, 0.7888420224189758, 0.8442533016204834, 0.7684658169746399, 0.8573401570320129, 0.872944176197052, 0.8522830009460449, 0.8133617639541626, 0.8492079973220825, 0.8003147840499878, 0.8335884213447571, 0.790122389793396, 0.8258617520332336, 0.8840338587760925, 0.8330073356628418, 0.7830491662025452, 0.7784581184387207, 0.7470133900642395, 0.8278506994247437, 0.8472753167152405, 0.8189921379089355, 0.8098985552787781, 0.814768373966217, 0.8240864276885986, 0.8571638464927673, 0.8879614472389221, 0.8562979698181152, 0.8568264245986938, 0.8120797872543335, 0.8191457986831665, 0.8792769908905029, 0.8223092555999756, 0.8059996962547302, 0.8029114007949829, 0.8863658308982849, 0.8293570876121521, 0.851035475730896, 0.8593397736549377, 0.8899006843566895, 0.8342544436454773, 0.8144145011901855, 0.79118812084198, 0.891471266746521, 0.8573401570320129, 0.8109468221664429, 0.844406008720398, 0.800242006778717, 0.873266875743866, 0.7855686545372009, 0.8235251903533936, 0.7847416996955872, 0.7974071502685547, 0.8385348320007324, 0.798463761806488, 0.7634634375572205, 0.7871517539024353, 0.8220424056053162, 0.8673578500747681, 0.8532484173774719, 0.7822204828262329, 0.8353016376495361, 0.8317109942436218, 0.7915312647819519, 0.8254305720329285, 0.8004056811332703, 0.8600507378578186, 0.8056789040565491, 0.8934874534606934, 0.8084540367126465, 0.7906674742698669, 0.8201927542686462, 0.8120797872543335, 0.8180021047592163, 0.8322766423225403, 0.8083242177963257, 0.8413007259368896, 0.8273545503616333, 0.792371392250061, 0.7732951045036316, 0.7824060320854187, 0.8187910318374634, 0.8029917478561401, 0.8458397388458252, 0.7904651165008545, 0.8284724950790405, 0.8473870754241943, 0.8441325426101685, 0.8825324773788452, 0.805149495601654, 0.8355066776275635, 0.7964587807655334, 0.845414936542511, 0.8134725689888, 0.8285996317863464, 0.8507477641105652, 0.8519439697265625, 0.8471330404281616, 0.8219714760780334, 0.801329493522644, 0.8751159310340881, 0.8178848624229431, 0.8488694429397583, 0.8945558071136475, 0.8659003376960754, 0.8581070303916931, 0.8609053492546082, 0.8350071310997009, 0.8596578240394592, 0.8491401076316833, 0.8588575720787048, 0.9142482876777649, 0.8127573728561401, 0.8777328729629517, 0.8809775710105896, 0.849151611328125, 0.777825117111206, 0.8076286911964417, 0.882764995098114, 0.8477984666824341, 0.8215973377227783, 0.8883625268936157, 0.7921786904335022, 0.8303840160369873, 0.7874786257743835, 0.8520879745483398, 0.8003827333450317, 0.8929160833358765, 0.8503332138061523, 0.860560417175293, 0.847549557685852, 0.8218907713890076, 0.8259192109107971, 0.8312519192695618, 0.8122381567955017, 0.8351662158966064, 0.8664456009864807, 0.826944887638092, 0.9122936725616455, 0.8763183355331421, 0.9167288541793823, 0.8588575720787048, 0.9130722880363464, 0.851035475730896, 0.8214789032936096, 0.8757326602935791, 0.8849130272865295, 0.8986042737960815, 0.8442533016204834, 0.7886549234390259, 0.8183456659317017, 0.8787093162536621, 0.8513599634170532, 0.8526691198348999, 0.8203364014625549, 0.960029661655426, 0.8746001720428467, 0.8466096520423889, 0.9015174508094788, 0.8842751979827881, 0.9110686779022217, 0.8767327666282654, 0.9069874882698059, 0.9109978675842285, 0.8976687788963318, 0.9002587795257568, 0.8657618165016174, 0.8534554243087769, 0.8958839178085327, 0.9672175049781799, 0.9085683226585388, 0.8202821016311646, 0.9343479871749878, 0.9179335832595825, 0.8666512966156006, 0.8415816426277161, 0.8851589560508728, 0.8319479823112488, 0.9371378421783447, 0.7993600368499756, 0.8377684950828552, 0.8524390459060669, 0.8991780877113342, 0.8177262544631958, 0.9338869452476501, 0.9447983503341675, 0.8499860167503357, 0.8632720708847046, 0.8976171612739563, 0.8688692450523376, 0.8404826521873474, 0.8602204918861389, 0.9140459299087524, 0.8477646112442017, 0.8775673508644104, 0.8187310695648193, 0.8896339535713196, 0.8525376915931702, 0.8151552081108093, 0.9318949580192566, 0.833419144153595, 0.8945558071136475, 0.893275797367096, 0.842575192451477, 0.8562878966331482, 0.8825324773788452, 0.9247017502784729, 0.8681624531745911, 0.8537231087684631, 0.8718218803405762, 0.8782117366790771, 0.9141539931297302, 0.8673582077026367, 0.8760941624641418, 0.8603012561798096, 0.8563725352287292, 0.8464368581771851, 0.9099481105804443, 0.8513599634170532, 0.8735436201095581, 0.8799245357513428, 0.8472470641136169, 0.7858717441558838, 0.8951519131660461, 0.866611123085022, 0.8316076397895813, 0.8425678014755249, 0.8320604562759399, 0.8729333877563477, 0.8788977861404419, 0.8441032767295837, 0.8998403549194336, 0.8783323764801025, 0.8791838884353638, 0.9100334644317627, 0.9041581153869629, 0.8813627362251282, 0.8606789112091064, 0.8099656701087952, 0.8065406084060669, 0.9234065413475037, 0.8698124885559082, 0.9107964038848877, 0.9159970283508301, 0.8636602163314819, 0.8568385243415833, 0.9267808794975281, 0.786056399345398, 0.7363736629486084, 0.784641683101654, 0.8942589163780212, 0.8564729690551758, 0.8017740845680237, 0.8178045749664307, 0.847819447517395, 0.771487832069397, 0.9408243298530579, 0.9038301706314087, 0.9358681440353394, 0.7670186758041382, 0.8048714399337769, 0.8548422455787659, 0.851425290107727, 0.8736830949783325, 0.741826593875885, 0.7682708501815796, 0.7476223111152649, 0.8698124885559082, 0.7490624785423279, 0.7166029214859009, 0.8636602163314819, 0.8568385243415833, 0.9267808794975281, 0.7363736629486084, 0.784641683101654, 0.7990856170654297, 0.7524147629737854, 0.7475557327270508, 0.7147632241249084, 0.759179413318634, 0.771487832069397, 0.7861859202384949, 0.7224948406219482, 0.7943359613418579])
array = np.round(X, 2)

print(array)
n = len(X)

# Mean and standard deviation of the original array
mean_X = np.mean(X)
std_X = np.std(X)

# Generate random values from a normal distribution with the same mean and standard deviation
Z = np.random.normal(mean_X, std_X, n)

# Calculate the new array using the formula for a specified correlation
Y = 0.8 * X + np.sqrt(1 - 0.8**2) * Z

print(Y)

min_val = np.min(Y)
max_val = np.max(Y)
# Avoid division by zero in case all values in the array are the same
if max_val == min_val:
    np.zeros_like(Y) if min_val == 0 else np.ones_like(Y)
array = (Y - min_val) / (max_val - min_val)

array = np.round(X, 2)

print(array)